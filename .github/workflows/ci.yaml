name: CI

on:
  pull_request:
  push:
    branches:
      - *

jobs:
  build_and_test:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        os:
          - ubuntu-latest
          - macOS-latest
          # - windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - name: check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --all-features --bins --examples
      - name: tests
        uses: actions-rs/cargo@v1
        env:
          GCP_TEST_CREDENTIALS: ${{ secrets.GCP_TEST_CREDENTIALS }}
          GCP_TEST_PROJECT: ${{ secrets.GCP_TEST_PROJECT }}
          GCP_TEST_BUCKET: ${{ secrets.GCP_TEST_BUCKET }}-${{ github.run_number }}-${{ matrix.os }}
          GCP_TEST_OBJECT: ${{ secrets.GCP_TEST_OBJECT }}-${{ github.run_number }}-${{ matrix.os }}
          GCP_TEST_TOPIC: ${{ secrets.GCP_TEST_TOPIC }}-${{ github.run_number }}-${{ matrix.os }}
          GCP_TEST_SUBSCRIPTION: ${{ secrets.GCP_TEST_SUBSCRIPTION }}-${{ github.run_number }}-${{ matrix.os }}
        with:
          command: test
          args: --all --lib --all-features
  check_fmt:
    name: Checking code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
